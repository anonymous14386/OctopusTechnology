body {
    background-color: #333333;
}

ul {
    list-style-type: none;
}

#contentBubble {
    width: 80%;
    background: #494949;
    margin-top: 7%;
    padding: 2%;
    border-radius: 10px;
    margin-bottom: 7%;
}

#conversationsimg {
    width: 60%;
}

a {
    color: #0F0;
    text-decoration: none;
}

a:active {
    color: #0F0;
}

a:visited {
    color: rgb(0, 255, 0);
}

a:hover {
    color: black;
}

/* Dropdown Button */
.dropbtn {
    background-color: black; /* Button background color is black */
    color: #0F0;
    padding: 16px;
    font-size: 16px;
    border: none;
    cursor: pointer;
    border-radius: 10px; /* Less drastic rounding for the button */
    min-width: 120px;
}

/* The container <div> - needed to position the dropdown content */
.dropdown {
    position: relative;
    display: inline-block;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
    display: none; /* Hides the dropdown content by default */
    position: absolute;
    background-color: #444444; /* darker grey background for the dropdown items */
    min-width: 160px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1; /* Ensures it appears above other content */
    border-radius: 5px;
}

/* Links inside the dropdown */
.dropdown-content a {
    color: #0F0; /* Text color for dropdown links */
    padding: 12px 16px;
    text-decoration: none;
    display: block; /* Makes links take full width of dropdown */
    text-align: left;
}

/* Change color of dropdown links on hover */
.dropdown-content a:hover {
    background-color: #333333; /* Darker background on hover for menu items */
    color: #0F0; /* Menu item text turns bright green on hover */
}

/* Show the dropdown menu on hover */
.dropdown:hover .dropdown-content {
    display: block; /* Shows the dropdown content when hovering over the .dropdown container */
}

/* Change the background color of the dropdown button when the dropdown content is shown */
.dropdown:hover .dropbtn {
    
}

/* General responsive image rule (recommended for all images to prevent overflow) */
img {
    max-width: 100%; /* Ensures images never overflow their parent container */
    height: auto;    /* Maintains aspect ratio (scales proportionally) */
}

/* Specific styling for the Octopus logo */
#otlogo {
    width: 25%; /* Sets the width of the octopus logo to 15% of its container */
    height: auto; /* Ensures it scales proportionally */
    /* If you want to center it and remove the <center> tag from HTML, you'd add:
    display: block;
    margin: 0 auto;
    */
}

/* Add specific rules for other images if they are still too large
   For example, if you have images inside your #contentBubble:
#contentBubble img {
    width: 80%;
    max-width: 500px; // Example: max width of 500px, 80% of container otherwise
    height: auto;
}
*/

/* Styling for GitHub logos */
.github-logo {
    width: 7%; /* Sets the width of the GitHub logos to 10% */
    height: auto; /* Maintains proportionality */
    vertical-align: middle; /* Helps align it nicely with the text */
}

/* Basic styling for the lizard button container */
.lizard {
    display: inline-block;
    vertical-align: top; /* Aligns it with the top of the menu button */
    margin-left: 10px;
}

/* Style the lizard button to match the menu button */
.lizardButton {
    background-color: black;
    color: #0F0;
    padding: 16px;
    font-size: 16px; /* The emoji will inherit this size */
    border: none;
    cursor: pointer;
    border-radius: 10px;
}

/* Style for the individual falling lizards */
.falling-lizard {
    position: fixed; /* Positions relative to the viewport */
    top: -50px;      /* Start above the screen */
    pointer-events: none; /* Lizards can't be clicked */
    z-index: 9999;   /* Ensure they are on top of everything */
    animation: fall linear; /* Apply the 'fall' animation */
    user-select: none; /* Prevents highlighting the emoji */
}

/* The animation keyframes for the fall */
@keyframes fall {
    to {
        /* Move the lizard from the top all the way past the bottom of the screen */
        transform: translateY(110vh) rotate(720deg);
    }
}